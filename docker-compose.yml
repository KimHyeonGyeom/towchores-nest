#version: "3.8"
#services:
#  api:
#    # image: thomas-oliver/nestjs-dockerized
#    build:
#      dockerfile: Dockerfile
#      context: .
#      # Only will build development stage from our dockerfile
#      target: development
#    # Mount our host Directory to the docker container
#    # Mount (.) current directory to the docker container thomas/src/app
#    # reflect file changes from host to container
#    volumes:
#      - .:/thomas/src/app
#      - ./thomas/src/app/node_modules
#    # Run in Debug Mode: npm run start:debug --> Don't forget to start your vscode debugger!
#    # Run in dev Mode: npm run start:dev
#    depends_on:
#      - mysql
#    command: npm run start:docker-dev-debug
#    environment:
#      MYSQL_HOST: "mysql"
#    ports:
#      - 8080:3000
#      # debugging port
#      - 9229:9229
#  mysql: # Example Service
#    container_name: myapp_mysql
#    restart: always
#    image: mysql:8.0
#    environment:
#      - MYSQL_ALLOW_EMPTY_PASSWORD=yes
#      - MYSQL_USER=root
#      - MYSQL_PASSWORD=1234
#      - MYSQL_DATABASE=mysql
#    ports:
#      - 3306:3306
#    expose:
#      - 3306


version: "3.8"
networks:
  app-tier:
    driver: bridge
services:
  app:
    networks:
      - app-tier
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - 8080:3000
      # debugging port
      - 9229:9229
    volumes:
      - .:/towchores/src/app
      - ./towchores/src/app/node_modules
    links:
      - mysql
    depends_on:
      - mysql
    command: npm run start:docker-dev-debug

  mysql:
    networks:
      - app-tier
    image: mysql
    restart: always
    command:
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
      - --skip-character-set-client-handshake
      - --innodb_ft_min_token_size=2
    volumes:
      - ./dev-mariadb/data:/var/lib/mysql #docker container가 중지되더라도 db의 데이터가 날아가지 않도록 원하는 디렉토리에 볼륨매핑을 설정한다.
    environment:
      - MYSQL_DATABASE=nest
      - MYSQL_USER=test
      - MYSQL_PASSWORD=1234
      - MYSQL_ROOT_PASSWORD=1234
    ports:
      - 3306:3306

